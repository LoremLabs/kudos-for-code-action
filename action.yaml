name: Kudos for Code
description: "Support your open source team"

inputs:
  destination:
    description: "Where to save the generated kudos. Options: artifact, pool"
    default: pool
    required: true
  github-token:
    description: A GITHUB_TOKEN with custom permissions.
  search-dir:
    description: "Root directory containing package.json"
    default: "."
    required: true    
  pool-id:
    description: "PoolId to save kudos to at external pool service."
    default: ""
  node-dev-dependencies:
    description: Identify contributors from devDependecies (Node.js)
    default: "true"
  identify-checks:
    description: Which methods should we use to identify the kudos? (kudos,contributors,lang)
    default: "kudos,contributors,lang"
  identify-langs:
    description: Which languages should we search for? (nodejs)
    default: "nodejs"
runs:
  using: composite
  steps:
    - uses: pnpm/action-setup@v2
      with: { version: 7 }
    - uses: actions/setup-node@v3
      with: { node-version: 18 }
    - name: Set up action
      run: |
        echo "::group::Set up action"
        pnpm -C ${{ github.action_path }} install --no-optional
        pnpm --silent -C ${{ github.action_path }} build
        echo "${{ github.action_path }}/node_modules/.bin" >> $GITHUB_PATH
        echo "KUDOS_DIR=$(mkdir -p ../.kudos && cd ../.kudos;pwd)" >> $GITHUB_ENV
        echo "::endgroup::"
      shell: bash

    - name: Set up Kudos Tools
      run: |
        echo "::group::Set up Kudos tools"
        npx --yes @loremlabs/setler@latest echo version
        echo "::endgroup::"
      shell: bash

    - name: Set current cohort
      run: |
        echo "::group::Set current cohort"
        if [ -z "$USER_COHORT" ]; then
          echo "KUDOS_COHORT=$(date +'%Y%W')" >> $GITHUB_ENV
        else
          echo "KUDOS_COHORT=$USER_COHORT" >> $GITHUB_ENV
        fi
        echo "::endgroup::"
      env:
        USER_COHORT: ${{ inputs.cohort }}
      shell: bash

    - name: Download last artifact
      if: contains(inputs.destination, 'artifact')      
      # Not using actions/download-artifact as it doesn't let us specify the "source" of artifact.
      uses: dawidd6/action-download-artifact@v2
      with:
        name: kudos
        path: ${{ env.KUDOS_DIR }}
        branch: ${{ github.event.repository.default_branch }}
        workflow_conclusion: success
        event: push
        github_token: ${{ inputs.github-token || github.token }}
        if_no_artifact_found: warn

    - name: "Identify Contributors"
      run: |
        echo "::group::Identify Contributors"

        outFile="${{ env.KUDOS_DIR }}/${{ env.KUDOS_COHORT }}.ndjson"
        echo ${outFile}

        echo npx @loremlabs/setler@latest kudos identify ${{ inputs.search-dir }} --outFile=${{ outFile }} ${{ inputs.node-dev-dependencies != 'false' && '--nodeDevDependencies' }} --checks=${{ inputs.identify-checks }} --lang=${{ inputs.identify-langs }}
        npx @loremlabs/setler@latest kudos identify ${{ inputs.search-dir }} --outFile=${{ outFile }} ${{ inputs.node-dev-dependencies != 'false' && '--nodeDevDependencies' }} --checks=${{ inputs.identify-checks }} --lang=${{ inputs.identify-langs }}

        echo "::endgroup::"
      shell: bash

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      if: contains(inputs.destination, 'artifact')      
      with:
        name: kudos
        path: ${{ env.KUDOS_DIR }}

    - name: Ink Kudos via Pool
      if: contains(inputs.destination, 'pool')      
      run: |
        echo "::group::Ink Kudos via Pool"

        outFile="${{ env.KUDOS_DIR }}/${{ env.KUDOS_COHORT }}.ndjson"

        npx @loremlabs/setler@latest pool ink --poolId=${{ inputs.pool-id }} --inFile=${outFile}

        echo "::endgroup::"
      shell: bash

branding:
  icon: users
  color: gray-dark
